# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: "Setup PowerShell Toolkit"
author: "hugoalh Studio"
description: "Setup PowerShell module `hugoalh.GitHubActionsToolkit`."
inputs:
  sudo:
    description: "{Boolean} Whether to execute this action in sudo mode on non-Windows environment."
    required: false
    default: "False"
  version:
    description: "{String} Target version."
    required: false
    default: "Latest"
  allowprerelease:
    description: "{Boolean} Whether to allow target pre release version."
    required: false
    default: "False"
  scope:
    description: "{String} Installation scope."
    required: false
    default: "CurrentUser"
  force:
    description: "{Boolean} Whether to force install or reinstall target (pre release) version."
    required: false
    default: "False"
  keepsetting:
    description: "{Boolean} Whether to keep the setting that modified by this action."
    required: false
    default: "True"
  toolkit_version:
    description: "{SemVer} Target version."
    required: false
    deprecationMessage: "Replaced by input `version`!"
  toolkit_allowprerelease:
    description: "{Boolean} Whether to allow target pre release version."
    required: false
    deprecationMessage: "Replaced by input `allowprerelease`!"
runs:
  using: "composite"
  steps:
    - name: "Main"
      run: |
        #Requires -PSEdition Core -Version 7.2
        $Script:ErrorActionPreference = 'Stop'
        Get-Alias -Scope 'Local' -ErrorAction 'SilentlyContinue' |
          Remove-Alias -Scope 'Local' -Force -ErrorAction 'SilentlyContinue'
        If ($Env:RUNNER_OS -inotin @('Linux', 'MacOS', 'Windows')) {
          Write-Host -Object '::error::Unknown operate system!'
          Exit 1
        }
        [String]$MainScriptPath = Join-Path -Path $Env:GITHUB_ACTION_PATH -ChildPath 'main.ps1'
        If (!(Test-Path -LiteralPath $MainScriptPath -PathType 'Leaf')) {
          Write-Host -Object '::error::Invalid script path!'
          Exit 1
        }
        [Boolean]$InputSudo = [Boolean]::Parse($Env:INPUT_SUDO)
        If ($InputSudo -and $Env:RUNNER_OS -iin @('Linux', 'MacOS')) {
          sudo --non-interactive --preserve-env pwsh -NonInteractive $MainScriptPath
        }
        Else {
          pwsh -NonInteractive $MainScriptPath
        }
      shell: "pwsh"
      env:
        INPUT_ALLOWPRERELEASE: "${{inputs.toolkit_allowprerelease || inputs.allowprerelease}}"
        INPUT_FORCE: "${{inputs.force}}"
        INPUT_KEEPSETTING: "${{inputs.keepsetting}}"
        INPUT_SCOPE: "${{inputs.scope}}"
        INPUT_SUDO: "${{inputs.sudo}}"
        INPUT_VERSION: "${{inputs.toolkit_version || inputs.version}}"
branding:
  icon: "package"
  color: "blue"
